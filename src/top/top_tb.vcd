$date
	Sun Aug 18 02:06:32 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_braille_converter_top $end
$var wire 8 ! reader4_out [7:0] $end
$var wire 8 " reader3_out [7:0] $end
$var wire 8 # reader2_out [7:0] $end
$var wire 8 $ reader1_out [7:0] $end
$var reg 1 % clk $end
$var reg 1 & next $end
$var reg 1 ' reset $end
$scope module top $end
$var wire 1 % clk $end
$var wire 1 & next $end
$var wire 1 ' reset $end
$var wire 8 ( reader4_out [7:0] $end
$var wire 8 ) reader3_out [7:0] $end
$var wire 8 * reader2_out [7:0] $end
$var wire 8 + reader1_out [7:0] $end
$var wire 8 , mem_dout [7:0] $end
$var wire 8 - mem_addr [7:0] $end
$var wire 1 . braille_valid $end
$var wire 8 / braille_size [7:0] $end
$var wire 8 0 braille_out [7:0] $end
$scope module cvt $end
$var wire 1 % clk $end
$var wire 1 ' reset $end
$var wire 8 1 mem_dout [7:0] $end
$var reg 8 2 ascii_size [7:0] $end
$var reg 8 3 braille_out [7:0] $end
$var reg 8 4 braille_size [7:0] $end
$var reg 1 . braille_valid $end
$var reg 8 5 current_ascii_size [7:0] $end
$var reg 8 6 current_braille_size [7:0] $end
$var reg 1 7 indi $end
$var reg 8 8 mem_addr [7:0] $end
$var reg 1 9 size_done $end
$scope function ascii_to_braille $end
$var reg 8 : ascii [7:0] $end
$upscope $end
$upscope $end
$scope module mem $end
$var wire 8 ; mem_addr [7:0] $end
$var reg 8 < mem_dout [7:0] $end
$upscope $end
$scope module rdr $end
$var wire 8 = braille_out [7:0] $end
$var wire 8 > braille_size [7:0] $end
$var wire 1 . braille_valid $end
$var wire 1 % clk $end
$var wire 1 & next $end
$var wire 1 ? next_falling_edge $end
$var wire 1 ' reset $end
$var parameter 3 @ END_SIGNAL $end
$var parameter 3 A IDLE $end
$var parameter 3 B LOADING $end
$var parameter 3 C SENDING $end
$var parameter 3 D START_SIGNAL $end
$var parameter 3 E WAIT_NEXT $end
$var reg 8 F buffer_index [7:0] $end
$var reg 8 G loaded_braille_size [7:0] $end
$var reg 1 H next_prev $end
$var reg 3 I next_state [2:0] $end
$var reg 1 J next_sync $end
$var reg 8 K read_addr [7:0] $end
$var reg 8 L reader1_out [7:0] $end
$var reg 8 M reader2_out [7:0] $end
$var reg 8 N reader3_out [7:0] $end
$var reg 8 O reader4_out [7:0] $end
$var reg 3 P state [2:0] $end
$var integer 32 Q i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 E
b10 D
b11 C
b1 B
b0 A
b101 @
$end
#0
$dumpvars
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
xJ
bx I
xH
bx G
bx F
x?
bx >
bx =
bx <
bx ;
bx :
x9
bx 8
x7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
bx -
bx ,
bx +
bx *
bx )
bx (
1'
0&
0%
bx $
bx #
bx "
bx !
$end
#5
b0 I
b0 0
b0 3
b0 =
0.
0J
1%
#10
0?
b1000011 ,
b1000011 1
b1000011 <
b0 !
b0 (
b0 O
b0 "
b0 )
b0 N
b0 #
b0 *
b0 M
b0 $
b0 +
b0 L
b0 G
b0 K
b0 F
b0 P
0H
07
09
b0 /
b0 4
b0 >
b0 6
b0 2
b0 5
b0 -
b0 8
b0 ;
b100000000 Q
0%
0'
#15
b100000000 Q
1%
#20
0%
1'
#25
b1100001 ,
b1100001 1
b1100001 <
b1 -
b1 8
b1 ;
b1 5
b10 6
1%
#30
0%
#35
b1110100 ,
b1110100 1
b1110100 <
b10 -
b10 8
b10 ;
b10 5
b11 6
1%
#40
0%
#45
b1010100 ,
b1010100 1
b1010100 <
b11 -
b11 8
b11 ;
b11 5
b100 6
1%
#50
0%
#55
b1101111 ,
b1101111 1
b1101111 <
b100 -
b100 8
b100 ;
b100 5
b110 6
1%
#60
0%
#65
b1101101 ,
b1101101 1
b1101101 <
b101 -
b101 8
b101 ;
b101 5
b111 6
1%
#70
0%
#75
b1101100 ,
b1101100 1
b1101100 <
b110 -
b110 8
b110 ;
b110 5
b1000 6
1%
#80
0%
#85
b1101001 ,
b1101001 1
b1101001 <
b111 -
b111 8
b111 ;
b111 5
b1001 6
1%
#90
0%
#95
b1101111 ,
b1101111 1
b1101111 <
b1000 -
b1000 8
b1000 ;
b1000 5
b1010 6
1%
#100
0%
#105
b1101110 ,
b1101110 1
b1101110 <
b1001 -
b1001 8
b1001 ;
b1001 5
b1011 6
1%
#110
0%
#115
b1101011 ,
b1101011 1
b1101011 <
b1010 -
b1010 8
b1010 ;
b1010 5
b1100 6
1%
#120
0%
#125
b1101001 ,
b1101001 1
b1101001 <
b1011 -
b1011 8
b1011 ;
b1011 5
b1101 6
1%
#130
0%
#135
b1101110 ,
b1101110 1
b1101110 <
b1100 -
b1100 8
b1100 ;
b1100 5
b1110 6
1%
#140
0%
#145
b1100111 ,
b1100111 1
b1100111 <
b1101 -
b1101 8
b1101 ;
b1101 5
b1111 6
1%
#150
0%
#155
b0 ,
b0 1
b0 <
b1110 -
b1110 8
b1110 ;
b1110 5
b10000 6
1%
#160
0%
#165
b1000011 ,
b1000011 1
b1000011 <
b1 I
b0 -
b0 8
b0 ;
1.
19
b10000 /
b10000 4
b10000 >
b1110 2
1%
#170
0%
#175
17
b1 0
b1 3
b1 =
1.
b1 P
b10000 G
1%
#180
0%
#185
b1100001 ,
b1100001 1
b1100001 <
b1 F
07
b1 -
b1 8
b1 ;
b110000 0
b110000 3
b110000 =
1.
b1000011 :
1%
#190
0%
#195
b1110100 ,
b1110100 1
b1110100 <
b10 -
b10 8
b10 ;
b100000 0
b100000 3
b100000 =
1.
b10 F
b1100001 :
1%
#200
0%
#205
b1010100 ,
b1010100 1
b1010100 <
b11 F
b11 -
b11 8
b11 ;
b11110 0
b11110 3
b11110 =
1.
b1110100 :
1%
#210
0%
#215
17
b1 0
b1 3
b1 =
1.
b100 F
1%
#220
0%
#225
b1101111 ,
b1101111 1
b1101111 <
b101 F
07
b100 -
b100 8
b100 ;
b11110 0
b11110 3
b11110 =
1.
b1010100 :
1%
#230
0%
#235
b1101101 ,
b1101101 1
b1101101 <
b101 -
b101 8
b101 ;
b100110 0
b100110 3
b100110 =
1.
b110 F
b1101111 :
1%
#240
0%
#245
b1101100 ,
b1101100 1
b1101100 <
b111 F
b110 -
b110 8
b110 ;
b110010 0
b110010 3
b110010 =
1.
b1101101 :
1%
#250
0%
#255
b1101001 ,
b1101001 1
b1101001 <
b111 -
b111 8
b111 ;
b101010 0
b101010 3
b101010 =
1.
b1000 F
b1101100 :
1%
#260
0%
#265
b1101111 ,
b1101111 1
b1101111 <
b1001 F
b1000 -
b1000 8
b1000 ;
b11000 0
b11000 3
b11000 =
1.
b1101001 :
1%
#270
0%
#275
b1101110 ,
b1101110 1
b1101110 <
b1001 -
b1001 8
b1001 ;
b100110 0
b100110 3
b100110 =
1.
b1010 F
b1101111 :
1%
#280
0%
#285
b1101011 ,
b1101011 1
b1101011 <
b1011 F
b1010 -
b1010 8
b1010 ;
b110110 0
b110110 3
b110110 =
1.
b1101110 :
1%
#290
0%
#295
b1101001 ,
b1101001 1
b1101001 <
b1011 -
b1011 8
b1011 ;
b100010 0
b100010 3
b100010 =
1.
b1100 F
b1101011 :
1%
#300
0%
#305
b1101110 ,
b1101110 1
b1101110 <
b1101 F
b1100 -
b1100 8
b1100 ;
b11000 0
b11000 3
b11000 =
1.
b1101001 :
1%
#310
0%
#315
b1100111 ,
b1100111 1
b1100111 <
b1101 -
b1101 8
b1101 ;
b110110 0
b110110 3
b110110 =
1.
b1110 F
b1101110 :
1%
#320
0%
#325
b0 ,
b0 1
b0 <
b1111 F
b1110 -
b1110 8
b1110 ;
b111100 0
b111100 3
b111100 =
1.
b1100111 :
1%
#330
0%
#335
b10 I
b0 0
b0 3
b0 =
0.
b10000 F
1%
#340
0%
#345
b11 I
b10 P
1%
#350
0%
#355
b11 P
b10111 !
b10111 (
b10111 O
b10111 "
b10111 )
b10111 N
b10111 #
b10111 *
b10111 M
b10111 $
b10111 +
b10111 L
1%
#360
0%
#365
1%
#370
0%
#375
1J
1%
1&
#380
0%
#385
1?
0J
1H
1%
0&
#390
0%
#395
0?
0H
b100 K
b11110 !
b11110 (
b11110 O
b100000 "
b100000 )
b100000 N
b110000 #
b110000 *
b110000 M
b1 $
b1 +
b1 L
1%
#400
0%
#405
1J
1%
1&
#410
0%
#415
1H
1%
#420
0%
#425
1%
#430
0%
#435
1%
#440
0%
#445
1%
#450
0%
#455
1%
#460
0%
#465
1%
#470
0%
#475
1%
#480
0%
#485
1%
#490
0%
#495
1%
#500
0%
#505
1?
0J
1%
0&
#510
0%
#515
0?
0H
b1000 K
b110010 !
b110010 (
b110010 O
b100110 "
b100110 )
b100110 N
b11110 #
b11110 *
b11110 M
1%
#520
0%
#525
1J
1%
1&
#530
0%
#535
1H
1%
#540
0%
#545
1%
#550
0%
#555
1%
#560
0%
#565
1%
#570
0%
#575
1%
#580
0%
#585
1%
#590
0%
#595
1%
#600
0%
#605
1%
#610
0%
#615
1%
#620
0%
#625
1%
#630
0%
#635
1%
#640
0%
#645
1%
#650
0%
#655
1%
#660
0%
#665
1%
#670
0%
#675
1%
#680
0%
#685
1%
#690
0%
#695
1%
#700
0%
#705
1%
#710
0%
#715
1%
#720
0%
#725
1?
0J
1%
0&
#730
0%
#735
0?
b11 I
0H
b1100 K
b110110 !
b110110 (
b110110 O
b11000 #
b11000 *
b11000 M
b101010 $
b101010 +
b101010 L
1%
#740
0%
#745
1J
1%
1&
#750
0%
#755
1H
1%
#760
0%
#765
1%
#770
0%
#775
1%
#780
0%
#785
1%
#790
0%
#795
1%
#800
0%
#805
1%
#810
0%
#815
1%
#820
0%
#825
1%
#830
0%
#835
1%
#840
0%
#845
1%
#850
0%
#855
1%
#860
0%
#865
1%
#870
0%
#875
1%
#880
0%
#885
1%
#890
0%
#895
1%
#900
0%
#905
1%
#910
0%
#915
1%
#920
0%
#925
1%
#930
0%
#935
1%
#940
0%
#945
b100 I
1?
0J
1%
0&
#950
0%
#955
0?
b100 I
0H
b100 P
b10000 K
b111100 !
b111100 (
b111100 O
b110110 "
b110110 )
b110110 N
b100010 $
b100010 +
b100010 L
1%
#960
0%
#965
1J
1%
1&
#970
0%
#975
1H
1%
#980
0%
#985
1%
#990
0%
#995
1%
#1000
0%
#1005
1%
#1010
0%
#1015
1%
#1020
0%
#1025
1%
#1030
0%
#1035
1%
#1040
0%
#1045
1%
#1050
0%
#1055
1%
#1060
0%
#1065
1%
#1070
0%
#1075
1%
#1080
0%
#1085
1%
#1090
0%
#1095
1%
#1100
0%
#1105
1%
#1110
0%
#1115
1%
#1120
0%
#1125
1%
#1130
0%
#1135
1%
#1140
0%
#1145
1%
#1150
0%
#1155
1%
#1160
0%
#1165
b101 I
1?
0J
1%
0&
#1170
0%
#1175
0?
b0 I
0H
b101 P
1%
#1180
0%
#1185
b1 !
b1 (
b1 O
b1 "
b1 )
b1 N
b1 #
b1 *
b1 M
b1 $
b1 +
b1 L
b0 P
1%
#1190
0%
#1195
1%
#1200
0%
#1205
1%
#1210
0%
#1215
1%
#1220
0%
#1225
1%
#1230
0%
#1235
1%
#1240
0%
#1245
1%
#1250
0%
#1255
1%
#1260
0%
#1265
1%
#1270
0%
#1275
1%
#1280
0%
#1285
1%
#1290
0%
#1295
1%
#1300
0%
#1305
1%
#1310
0%
#1315
1%
#1320
0%
#1325
1%
#1330
0%
#1335
1%
#1340
0%
#1345
1%
#1350
0%
#1355
1%
#1360
0%
#1365
1%
